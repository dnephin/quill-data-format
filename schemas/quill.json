{
    "$schema": "http://json-schema.org/draft-04/schema#",

    "title": "Topic",
    "type": "object",
    "description": "A topic is composed of a statement and feedback relating to that statement",
    "properties": {
        "statement": {
            "type": "array",
            "description": "A list of every version of the statement, sorted in reverse chronological order so that the most recent version is first.",
            "minItems": 1,
            "uniqueItems": true,
            "items": {
                "$ref": "#/definitions/statement"
            }
        },
        "feedback": {
            "type": "array",
            "description": "All the feedback relating to every version of the Statement. The order is undefined.",
            "minItems": 0,
            "uniqueItems": true,
            "items": {
                "$ref": "#/definitions/feedback"
            }
        },
        "current": {
            "$ref": "#/definitions/statement",
            "description": "A reference to the latest version of the statement."
        },
        "required": ["statement", "feedback"]
    },

    "definitions": {

        "statement": {
            "title": "Statement",
            "type": "object",
            "description": "A statement is a document that describes a policy or proposal. It is the root of the comment graph. Each statement object is a single revision of a statement.",
            "properties": {
                "label": { "$ref": "#/definitions/label" },
                "version": { "$ref": "#/definitions/version" },
                "authors": {
                    "type": "array",
                    "description": "Parties involved in the creation of the statement.",
                    "minItems": 1,
                    "uniqueItems": true,
                    "items": {
                        "$ref": "#/definitions/author"
                    }
                },
                "title": {
                    "type": "string",
                    "description": "The full (human readable) title of the statement."
                },
                "problem": { "$ref": "#/definitions/document" },
                "summary": { "$ref": "#/definitions/document" },
                "full": { "$ref": "#/definitions/document" }
            },
            "required": ["label", "version", "authors", "title", "problem", "full"]
        },

        "label": {
            "title": "Label",
            "type": "string",
            "description": "A label is a unique identifier, it is used as part of a URI to retrieve a piece of content.",
            "minLength": 20,
            "maxLength": 80,
            "pattern": "^[a-z0-9-]+$"
        },

        "id": {
            "title": "Id",
            "type": "string",
            "description": "A unique identifier for a piece of content.",
            "minLength": 4,
            "maxLength": 32,
            "pattern": "^[a-z0-9-]+$"
        },

        "version": {
            "title": "Version",
            "type": "object",
            "description": "A semantic version for this revision of a piece of content. See http://semver.org/ for a full specification.",
            "properties": {
                "semantic": {"$ref": "#/definitions/semantic-version"},
                "details": {
                    "type": "string",
                    "description": "Extra details about this version, for example release notes, or sign-off."
                },
                "published-date": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The date and time when this version was officially released."
                }
            },
            "required": ["semantic"]
        },

        "semantic-version": {
            "type": "array",
            "items": [
                {"type": "integer", "minimum": 0},
                {"type": "integer", "minimum": 0},
                {"type": "integer", "minimum": 0}
            ],
            "minItems": 3,
            "maxItems": 3
        },

        "author": {
            "title": "Author",
            "description": "An entity who has contributed to a piece of content.",
            "type": "object",
            "properties": {
                "id": {
                    "type": "string",
                    "description": "A unique identifier of a person or entity."
                },
                "credit": {
                    "type": "string",
                    "description": "A description of the work contributed by this party."
                },
                "relation": {
                    "type": "string",
                    "description": "A short background about how the author relates to the proposal (ex: level of expertise or practical experience with the topic)."
                }
            },
            "required": ["id"]
        },

        "document": {
            "type": "array",
            "minItems": 1,
            "items": {
                "$ref": "#/definitions/section"
            }
        },

        "section": {
            "type": "object",
            "description": "A section within a document, may have a header, and can be referenced my feedback.",
            "properties": {
                "id": {"$ref": "#/definitions/id"},
                "header": {"type": "string"},
                "body": {
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 1000
                }
            },
            "required": ["id", "body"]
        },

        "feedback": {
            "title": "Feedback",
            "type": "object",
            "description": "A response to a section of a statement or feedback.",
            "properties": {
                "id": { "$ref": "#/definitions/id" },
                "position": {
                    "type": "string",
                    "description": "The stance taken by this feedback.",
                    "enum": [
                        "support",
                        "accept",
                        "challenge",
                        "oppose",
                        "disregard"
                    ]
                },
                "author": {
                    "$ref": "#/definitions/author"
                },
                "created": {
                    "type": "string",
                    "format": "date-time"
                },
                "last-modified": {
                    "type": "string",
                    "format": "date-time"
                },
                "summary": { "$ref": "#/definitions/document" },
                "full": { "$ref": "#/definitions/document" },
                "reference": {
                    "type": "object",
                    "description": "A link to the section in a document which is being discussed by the feedback.",
                    "properties": {
                        "document": {
                            "type": "string",
                            "enum": [
                                "statement-problem",
                                "statement-summary",
                                "statement-full",
                                "feedback-summary",
                                "feedback-full"
                            ]
                        },
                        "feedback": {
                            "$ref": "#/definitions/id",
                            "description": "The id of the feedback item if this feedback is referencing another."
                        },
                        "statement": {
                            "$ref": "#/definitions/id",
                            "description": "The id of the statement being referenced."
                        },
                        "context": {
                            "type": "string",
                            "description": "The exact text which is being referenced."
                        }
                    },
                    "required": ["document", "statement"]
                },
                "state": {
                    "type": "string",
                    "enum": ["new", "addressed", "resolved", "retracted"]
                },
                "resolved-by": {"$ref": "#/definitions/semantic-version"}
            },
            "required": ["id", "position", "author", "full", "reference"],
            "dependencies": {
                "last-modified": ["created"],
                "state": ["created", "last-modified"]
            }
        }

    }
}
